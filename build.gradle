plugins {
	id 'java'
	id 'org.sonarqube' version '3.3'
	id 'org.springframework.boot' version '2.5.6' // Spring Boot 버전을 2.5.6으로 변경
	id 'io.spring.dependency-management' version '1.0.11.RELEASE' // Spring Boot 버전 변경
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

jar {
	enabled = false
}

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	//spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//modelmapper
	implementation 'org.modelmapper:modelmapper:3.1.1'

	//mysql
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.mysql:mysql-connector-j:8.1.0'

	//postgresql
	implementation 'org.postgresql:postgresql:42.6.0'
	runtimeOnly 'com.h2database:h2'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'org.webjars.npm:jsonwebtoken:8.5.1'

	//eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.9.RELEASE'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//SMTP
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.0.5'
	implementation 'jakarta.mail:jakarta.mail-api:2.1.2'

	// SonarQube
	implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

	// Jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

sonarqube {
	properties {
//		property "sonar.projectKey", "프로젝트 이름"
		property "sonar.projectName" , "Studio-Eye-User-Service"
		property "sonar.sources", "src" // 소스 경로
		property "sonar.language", "java" // 언어
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.profile", "Sonar way" // SonarQube 에서 분석할 때 적용할 프로필(분석할 수준 설정)
		property "sonar.java.binaries", "${buildDir}/classes" // 자바 클래스 파일위치
//		property "sonar.test.inclusions", "**/*Test.java" // 코드 분석에 사용할 테스트 소스
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
